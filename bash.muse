#title Bash
#author Ole Yang
#desc descrition
#date 2011-06-02

<contents>


* 几个特殊参数
 - $0 表示程序本身
<src type="bash">
./test.sh arg1 arg2
</src>
那么$0代表test.sh
 - $1 第一个参数<br>
上面的例子中的arg1
 - $2 第二个参数
 - $# 一共有几个参数，是一个整数
 - $* 由参数组成的数组
<src type="bash">
#!/bin/sh
# dollor.sh
if [ $# -gt 2 ]
then
  echo "一共有$#个参数"
  echo "每个参数为："
  for arg in $*
  do
    echo $arg
  done
fi
exit 0
</src>
运行dollor.sh
<src type="bash">
$ ./dollor.sh arg1 arg2 arg3
一共有3个参数
每个参数为：
arg1
arg2
arg3
</src>

* 数组
** 建立数组
<src type="bash">
myArr=('a' 'b' 'c');
myArr[i]='z'
</src>

改变某个元素的值
<src type="text">
myArr[0]='e'
</src>

** 取得长度
<src type="text">
#!/bin/sh
# arrTest.sh
myArr=('a' 'b' 'c');

echo 'lenth of myArr '${#myArr[@]}
</src>
运行
<src type="text">
$ chomd +x arrTest.sh
$ ./arrTest.sh
lenth of myArr 3
</src>

** 取的元素值
<src type="text">
#!/bin/sh

myArr=('a' 'b' 'c');

echo 'myArr[0] = '${myArr[0]}
</src>
运行
<src type="text">
[ole@myhost bin]$ ./arrTest.sh 
myArr[0] = a
</src>

取所有元素的值使用*号
<src type="text">
#!/bin/sh

myArr=('a' 'b' 'c');
myArr[9]='z'

echo ${myArr[*]}
</src>
运行
<src type="text">
./arrTest.sh 
a b c z
</src>

** 遍历数组
<src type="text">
#!/bin/sh

myArr=('a' 'b' 'c');
myArr[9]='z'

for i in "${myArr[*]}"
do
    echo $i
done
</src>
运行
<src type="text">
./arrTest.sh 
a b c z
</src>

另外一种就是for循环




* 字符串
** 字符串截取
 1、第一种方法:

${varible##*string} 从左向右截取最后一个string后的字符串

${varible#*string}从左向右截取第一个string后的字符串

${varible%%string*}从右向左截取最后一个string后的字符串

${varible%string*}从右向左截取第一个string后的字符串

“*”只是一个通配符可以不要

例子：
<src type="bash">
$ MYVAR=foodforthought.jpg
$ echo ${MYVAR##*fo}
rthought.jpg
$ echo ${MYVAR#*fo}
odforthought.jpg
</src>

 2、第二种方法：${varible:n1:n2}:截取变量varible从n1到n2之间的字符串。

可以根据特定字符偏移和长度，使用另一种形式的变量扩展，来选择特定子字符串。试着在 bash 中输入以下行：
<src type="bash">
$ EXCLAIM=cowabunga
$ echo ${EXCLAIM:0:3}
cow
$ echo ${EXCLAIM:3:7}
abunga
</src>

* 日志
** logger
记录日志到Syslog中(/var/log/messages)
<src type="bash">

logger
</src>
** logrotate
