#title ROR
#author Levi Yang

<contents>


* 安装
** 安装rvm
rvm 是Ruby Version Manger

<src type="text">
yum install -y curl git
yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel
</src>

bash < <(curl -s https://rvm.beginrescueend.com/install/rvm)

在~/.bashrc 或者是~/.bash_profile的最后加上,即加载rvm配置
<src type="text">
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
</src>

马上生效
<src type="text">
source ~/.bashrc
</src>
或者
<src type="text">
source ~/.rvm/scripts/rvm
</src>

** 安装Node.js
Node.js在运行时可能用到。
<src type="text">
curl https://raw.github.com/creationix/nvm/master/install.sh | sh
</src>

加载配置
<src type="text">
source ~/.nvm/nvm.sh
</src>

使用方法
查看已经安装的版本
<src type="text">
[100msh@Levi ~]$ nvm ls
</src>

显示可安装版本
<src type="text">
[100msh@Levi ~]$ nvm ls-remote

   v0.1.14
   v0.1.15
   v0.1.16
   v0.1.17
   v0.1.18
...
  v0.10.10
  v0.10.11
  v0.10.12
   v0.11.0
   v0.11.1
   v0.11.2
   v0.11.3

</src>

安装指定的版本
<src type="text">
[100msh@Levi ~]$ nvm install 0.11.3
</src>

使用指定的版本
<src type="text">
[100msh@Levi ~]$ nvm use 0.11.3
</src>
或者
<src type="text">
[100msh@Levi ~]$ nvm run 0.11.3
</src>

设置默认的版本
<src type="text">
[100msh@Levi ~]$ nvm alias default 0.11.3
default -> 0.11.3 (-> v0.11.3)
</src>

设置源

由于rubygems.org是存放在Amazon S3上面，访问会有问题，运行gem install rails会没有相应（可以使用-V参数查看），这里就需要修改rvm安装ruby的源
<src type="text">
cp ~/.rvm/config/db ~/.rvm/config/db.raw
vi ~/.rvm/config/db
</src>
找到下面的一段
<src type="text">
ruby_1.0_url=http://ftp.ruby-lang.org/pub/ruby/1.0
ruby_1.2_url=http://ftp.ruby-lang.org/pub/ruby/1.2
ruby_1.3_url=http://ftp.ruby-lang.org/pub/ruby/1.3
ruby_1.4_url=http://ftp.ruby-lang.org/pub/ruby/1.4
ruby_1.5_url=http://ftp.ruby-lang.org/pub/ruby/1.5
ruby_1.6_url=http://ftp.ruby-lang.org/pub/ruby/1.6
ruby_1.7_url=http://ftp.ruby-lang.org/pub/ruby/1.7
ruby_1.8_url=http://ftp.ruby-lang.org/pub/ruby/1.8
ruby_1.9_url=http://ftp.ruby-lang.org/pub/ruby/1.9
ruby_2.0_url=http://ftp.ruby-lang.org/pub/ruby/2.0
</src>

修改对应版本的就可以了，这里使用淘宝的源
<src type="text">
ruby_1.9_url=http://ruby.taobao.org/mirrors/ruby/1.9
</src>

随便更改一下gem的源
<src type="text">
gem sources --remove http://rubygems.org/
gem sources -a http://ruby.taobao.org/
gem sources -l
</src>

** 安装ruby
<src type="text">
rvm get head && rvm reload
rvm install 1.9.3
</src>

创建一个名为rail3tutorial2ndEd 的gemset
<src type="text">
rvm use 1.9.3@rails3tutorial2ndEd --create --default
</src>

如果遇到问题使用help查看
<src type="text">
rvm --help
rvm gemset --help
</src>

** 安装rubygems
rubygems是ruby项目包管理程序。安装ruby的时候gem就安装了
<src type="text">
which gem
</src>

如果没有安装，使用如下方法安装

[[下载rubygem][http://rubyforge.org/frs/?group_id=126]],解压，进入目录，然后运行安装程序
<src type="text">
ruby setup.rb
</src>

指定gem的版本
<src type="text">
[100msh@Levi ~]$ gem update --system 1.8.24
Updating rubygems-update
Fetching: rubygems-update-1.8.24.gem (100%)
Successfully installed rubygems-update-1.8.24
Installing RubyGems 1.8.24
RubyGems 1.8.24 installed
</src>

修改配置文件，不自动生成文档
<src type="text">
vi ~/.gemrc
</src>
输入如下内容
<src type="text">
install: --no-rdoc --no-ri
update: --no-rdoc --no-ri
</src>

** 安装Rails
rails是一个web的框架
<src type="text">
gem install rails -v 3.2.13
</src>

查看rails版本
<src type="text">
[100msh@Levi ~]$ rails -v
Rails 3.2.13
</src>

* 第一个程序
** 创建程序框架
<src type="text">
mkdir rails_projects
cd rails_projects
rails new first_app
      create  
      create  README.rdoc
      create  Rakefile
      create  config.ru
      create  .gitignore
      create  Gemfile
      create  app
      create  app/assets/images/rails.png
      create  app/assets/javascripts/application.js
      create  app/assets/stylesheets/application.css
      create  app/controllers/application_controller.rb
      create  app/helpers/application_helper.rb
      create  app/views/layouts/application.html.erb
      create  app/mailers/.gitkeep
      create  app/models/.gitkeep
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
      create  config/environments
      create  config/environments/development.rb
      create  config/environments/production.rb
      create  config/environments/test.rb
      create  config/initializers
      create  config/initializers/backtrace_silencers.rb
      create  config/initializers/inflections.rb
      create  config/initializers/mime_types.rb
      create  config/initializers/secret_token.rb
      create  config/initializers/session_store.rb
      create  config/initializers/wrap_parameters.rb
      create  config/locales
      create  config/locales/en.yml
      create  config/boot.rb
      create  config/database.yml
      create  db
      create  db/seeds.rb
      create  doc
      create  doc/README_FOR_APP
      create  lib
      create  lib/tasks
      create  lib/tasks/.gitkeep
      create  lib/assets
      create  lib/assets/.gitkeep
      create  log
      create  log/.gitkeep
      create  public
      create  public/404.html
      create  public/422.html
      create  public/500.html
      create  public/favicon.ico
      create  public/index.html
      create  public/robots.txt
      create  script
      create  script/rails
      create  test/fixtures
      create  test/fixtures/.gitkeep
      create  test/functional
      create  test/functional/.gitkeep
      create  test/integration
      create  test/integration/.gitkeep
      create  test/unit
      create  test/unit/.gitkeep
      create  test/performance/browsing_test.rb
      create  test/test_helper.rb
      create  tmp/cache
      create  tmp/cache/assets
      create  vendor/assets/javascripts
      create  vendor/assets/javascripts/.gitkeep
      create  vendor/assets/stylesheets
      create  vendor/assets/stylesheets/.gitkeep
      create  vendor/plugins
      create  vendor/plugins/.gitkeep
         run  bundle install
</src>
rails new 创建完文件以后，run bundle install 是安装bundle（ruby打包工具），需要等待一段时间

*** 文件结构分析



